{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konrad.ziebinski\\\\Desktop\\\\President\\\\zarzadzanie\\\\src\\\\components\\\\mainpages\\\\createTank\\\\Create_Tank.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useParams, useHistory } from 'react-router-dom';\nconst initialState = {\n  tank_id: '',\n  side_id: 'Boczny napis',\n  title: 'Nazwa',\n  producer: 'Producent',\n  modyfication: 'Modyfikacja',\n  ammo: 'Amunicja w mm',\n  armor: 'Grubości pancerza przód/boki/tył w mm',\n  milage: 'Przebieg w km',\n  images: '',\n  category: '',\n  datetank: 'Rocznik',\n  datetankc: 'Data Wprowadzenia Czołgu'\n};\n\nfunction CreateTank() {\n  const state = useContext(GlobalState);\n  const [tank, setTank] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const navigate = useHistory();\n  const param = useParams();\n  const [tanks] = state.TanksAPI.tanks;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.TanksAPI.callback;\n  useEffect(() => {\n    if (param.id) {\n      setOnEdit(true);\n      tanks.forEach(tank => {\n        if (tank._id === param.id) {\n          setTank(tank);\n          setImages(tank.images);\n        }\n      });\n    } else {\n      setOnEdit(false);\n      setTank(initialState);\n      setImages(false);\n    }\n  }, [param.id, tanks]);\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"Nie jesteś zalogowany\");\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 1024 * 1024) // 1mb\n        return alert(\"Za duży rozmiar!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"Nie jesteś zalogowany\");\n      setLoading(true);\n      await axios.post('/api/destroy', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTank({ ...tank,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"Nie jesteś zalogowany\");\n      if (!images) return alert(\"Brak zdjęcia\");\n\n      if (onEdit) {\n        await axios.put(`/api/tanks/${tank._id}`, { ...tank,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        await axios.post('/api/tanks', { ...tank,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      }\n\n      setCallback(!callback);\n      navigate.push(\"/\");\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create_tank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"file_up\",\n    onChange: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"file_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 50\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    id: \"file_img\",\n    style: styleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: images ? images.url : '',\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleDestroy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tank_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Tank ID\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"tank_id\",\n    id: \"tank_id\",\n    required: true,\n    value: tank.tank_id,\n    onChange: handleChangeInput,\n    disabled: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"side_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Numer Boczny\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"side_id\",\n    id: \"side_id\",\n    required: true,\n    value: tank.side_id,\n    onChange: handleChangeInput,\n    disabled: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"producer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Producent\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"producer\",\n    id: \"producer\",\n    required: true,\n    value: tank.producer,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"modyfication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"Modyfikacja\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"modyfication\",\n    id: \"modyfication\",\n    required: true,\n    value: tank.modyfication,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ammo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Liczba Amunicja\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"ammo\",\n    id: \"ammo\",\n    required: true,\n    value: tank.ammo,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"armor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, \"Grubo\\u015Bci pancerza prz\\xF3d/boki/ty\\u0142 w mm\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"armor\",\n    id: \"armor\",\n    required: true,\n    value: tank.armor,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"milage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Przebieg w km\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"milage\",\n    id: \"milage\",\n    required: true,\n    value: tank.milage,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"datetank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Rocznik\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"datetank\",\n    id: \"datetank\",\n    required: true,\n    value: tank.datetank,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"datetankc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"Data Wprowadzenia Czo\\u0142gu\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"datetankc\",\n    id: \"datetankc\",\n    required: true,\n    value: tank.datetankc,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"Kategoria: \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    value: tank.category,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"Prosz\\u0119 o wybranie kategorii\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    value: category._id,\n    key: category._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, category.name)))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, onEdit ? \"Update\" : \"Create\")));\n}\n\nexport default CreateTank;","map":{"version":3,"sources":["C:/Users/konrad.ziebinski/Desktop/President/zarzadzanie/src/components/mainpages/createTank/Create_Tank.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useParams","useHistory","initialState","tank_id","side_id","title","producer","modyfication","ammo","armor","milage","images","category","datetank","datetankc","CreateTank","state","tank","setTank","categories","categoriesAPI","setImages","loading","setLoading","isAdmin","userAPI","token","navigate","param","tanks","TanksAPI","onEdit","setOnEdit","callback","setCallback","id","forEach","_id","handleUpload","e","preventDefault","alert","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","response","msg","handleDestroy","public_id","handleChangeInput","name","value","handleSubmit","put","push","styleUpload","display","url","map"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport axios from 'axios'\nimport {GlobalState} from '../../../GlobalState'\nimport Loading from '../utils/loading/Loading'\nimport {useParams, useHistory } from 'react-router-dom'\n\nconst initialState = {\n    tank_id:'' ,\n    side_id:'Boczny napis' ,\n    title:'Nazwa' ,\n    producer:'Producent' ,\n    modyfication:'Modyfikacja' ,\n    ammo:'Amunicja w mm' ,\n    armor:'Grubości pancerza przód/boki/tył w mm' ,\n    milage:'Przebieg w km' ,\n    images:'' ,\n    category:'' ,\n    datetank:'Rocznik' ,\n    datetankc:'Data Wprowadzenia Czołgu' \n}\n\nfunction CreateTank() {\n    const state = useContext(GlobalState)\n    const [tank, setTank] = useState(initialState)\n    const [categories] = state.categoriesAPI.categories\n    const [images, setImages] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n\n    const [isAdmin] = state.userAPI.isAdmin\n    const [token] = state.token\n    \n    const navigate = useHistory ()\n    const param = useParams()\n\n    const [tanks] = state.TanksAPI.tanks\n    const [onEdit, setOnEdit] = useState(false)\n    const [callback, setCallback] = state.TanksAPI.callback\n\n    useEffect(() => {\n        if(param.id){\n            setOnEdit(true)\n            tanks.forEach(tank => {\n                if(tank._id === param.id) {\n                    setTank(tank)\n                    setImages(tank.images)\n                }\n            })\n        }else{\n            setOnEdit(false)\n            setTank(initialState)\n            setImages(false)\n        }\n    }, [param.id, tanks])\n\n    const handleUpload = async e =>{\n        e.preventDefault()\n        try {\n            if(!isAdmin) return alert(\"Nie jesteś zalogowany\")\n            const file = e.target.files[0]\n            \n            if(!file) return alert(\"File not exist.\")\n\n            if(file.size > 1024 * 1024) // 1mb\n                return alert(\"Za duży rozmiar!\")\n\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n                return alert(\"File format is incorrect.\")\n\n            let formData = new FormData()\n            formData.append('file', file)\n\n            setLoading(true)\n            const res = await axios.post('/api/upload', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n            setLoading(false)\n            setImages(res.data)\n\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    const handleDestroy = async () => {\n        try {\n            if(!isAdmin) return alert(\"Nie jesteś zalogowany\")\n            setLoading(true)\n            await axios.post('/api/destroy', {public_id: images.public_id}, {\n                headers: {Authorization: token}\n            })\n            setLoading(false)\n            setImages(false)\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    const handleChangeInput = e =>{\n        const {name, value} = e.target\n        setTank({...tank, [name]:value})\n    }\n\n    const handleSubmit = async e =>{\n        e.preventDefault()\n        try {\n            if(!isAdmin) return alert(\"Nie jesteś zalogowany\")\n            if(!images) return alert(\"Brak zdjęcia\")\n\n            if(onEdit){\n                await axios.put(`/api/tanks/${tank._id}`, {...tank, images}, {\n                    headers: {Authorization: token}\n                })\n            }else{\n                await axios.post('/api/tanks', {...tank, images}, {\n                    headers: {Authorization: token}\n                })\n            }\n            setCallback(!callback)\n            navigate.push(\"/\")\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    const styleUpload = {\n        display: images ? \"block\" : \"none\"\n    }\n    return (\n        <div className=\"create_tank\">\n            <div className=\"upload\">\n                <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\n                {\n                    loading ? <div id=\"file_img\"><Loading /></div>\n\n                    :<div id=\"file_img\" style={styleUpload}>\n                        <img src={images ? images.url : ''} alt=\"\"/>\n                        <span onClick={handleDestroy}>X</span>\n                    </div>\n                }\n                \n            </div>\n\n            <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                    <label htmlFor=\"tank_id\">Tank ID</label>\n                    <input type=\"text\" name=\"tank_id\" id=\"tank_id\" required\n                    value={tank.tank_id} onChange={handleChangeInput} disabled={onEdit} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"side_id\">Numer Boczny</label>\n                    <input type=\"text\" name=\"side_id\" id=\"side_id\" required\n                    value={tank.side_id} onChange={handleChangeInput} disabled={onEdit} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"producer\">Producent</label>\n                    <input type=\"text\" name=\"producer\" id=\"producer\" required\n                    value={tank.producer} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"modyfication\">Modyfikacja</label>\n                    <input type=\"text\" name=\"modyfication\" id=\"modyfication\" required\n                    value={tank.modyfication} onChange={handleChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"ammo\">Liczba Amunicja</label>\n                    <input type=\"number\" name=\"ammo\" id=\"ammo\" required\n                    value={tank.ammo} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"armor\">Grubości pancerza przód/boki/tył w mm</label>\n                    <input type=\"text\" name=\"armor\" id=\"armor\" required\n                    value={tank.armor} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"milage\">Przebieg w km</label>\n                    <input type=\"number\" name=\"milage\" id=\"milage\" required\n                    value={tank.milage} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"datetank\">Rocznik</label>\n                    <input type=\"date\" name=\"datetank\" id=\"datetank\" required\n                    value={tank.datetank} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"datetankc\">Data Wprowadzenia Czołgu</label>\n                    <input type=\"date\" name=\"datetankc\" id=\"datetankc\" required\n                    value={tank.datetankc} onChange={handleChangeInput} />\n                </div>\n\n\n\n                <div className=\"row\">\n                    <label htmlFor=\"categories\">Kategoria: </label>\n                    <select name=\"category\" value={tank.category} onChange={handleChangeInput} >\n                        <option value=\"\">Proszę o wybranie kategorii</option>\n                        {\n                            categories.map(category => (\n                                <option value={category._id} key={category._id}>\n                                    {category.name}\n                                </option>\n                            ))\n                        }\n                    </select>\n                </div>\n\n                <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateTank\n"]},"metadata":{},"sourceType":"module"}