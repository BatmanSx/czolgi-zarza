{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konrad.ziebinski\\\\Desktop\\\\President\\\\zarzadzanie\\\\src\\\\components\\\\mainpages\\\\createTank\\\\CreateTank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  tank_id: '',\n  side_id: '',\n  title: '',\n  producer: '',\n  modyfication: '',\n  ammo: '',\n  armor: '',\n  milage: '',\n  images: '',\n  category: '',\n  datetank: '',\n  datetankc: ''\n};\n\nfunction CreateTank() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [tank, setTank] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories;\n  const [images, setImages] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const param = useParams();\n  const [tanks] = state.tanksAPI.tank;\n  const [onEdit, setOnEdit] = useState(false);\n  const [callback, setCallback] = state.tanksAPI.callback;\n  useEffect(() => {\n    if (param.id) {\n      setOnEdit(true);\n      tanks.forEach(tank => {\n        if (tank._id === param.id) {\n          setTank(tank);\n          setImages(tank.images);\n        }\n      });\n    } else {\n      setOnEdit(false);\n      setTank(initialState);\n      setImages(false);\n    }\n  }, [param.id, tanks]);\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      const file = e.target.files[0];\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(res.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post('/api/destroy', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTank({ ...tank,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      if (!images) return alert(\"No Image Upload\");\n\n      if (onEdit) {\n        await axios.put(`/api/tanks/${tank._id}`, { ...tank,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        await axios.post('/api/tanks', { ...tank,\n          images\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      }\n\n      setCallback(!callback);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_tank\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file_up\",\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_img\",\n        style: styleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images ? images.url : '',\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleDestroy,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tank_id\",\n          children: \"Tank ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tank_id\",\n          id: \"tank_id\",\n          required: true,\n          value: tank.tank_id,\n          onChange: handleChangeInput,\n          disabled: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"side_id\",\n          children: \"Numer Boczny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tank_id\",\n          id: \"tank_id\",\n          required: true,\n          value: tank.side_id,\n          onChange: handleChangeInput,\n          disabled: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"producer\",\n          children: \"Producent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"producer\",\n          id: \"producer\",\n          required: true,\n          value: tank.producer,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"modyfication\",\n          children: \"Modyfikacja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"modyfication\",\n          id: \"modyfication\",\n          required: true,\n          value: tank.modyfication,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ammo\",\n          children: \"Liczba Amunicja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"ammo\",\n          id: \"ammo\",\n          required: true,\n          value: tank.ammo,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"armor\",\n          children: \"Grubo\\u015Bci pancerza prz\\xF3d/boki/ty\\u0142 w mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"armor\",\n          id: \"armor\",\n          required: true,\n          value: tank.armor,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"milage\",\n          children: \"Przebieg w km\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"milage\",\n          id: \"milage\",\n          required: true,\n          value: tank.milage,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"datetank\",\n          children: \"Rocznik\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"datetank\",\n          id: \"datetank\",\n          required: true,\n          value: tank.datetank,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"datetankc\",\n          children: \"Data Wprowadzenia Czo\\u0142gu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"datetankc\",\n          id: \"datetankc\",\n          required: true,\n          value: tank.datetankc,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Kategoria: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: tank.category,\n          onChange: handleChangeInput,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Prosz\\u0119 o wybranie kategorii\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: onEdit ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateTank, \"ZxDaqrqH6AB5XBxlfuQB9n/Bw5o=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateTank;\nexport default CreateTank;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTank\");","map":{"version":3,"sources":["C:/Users/konrad.ziebinski/Desktop/President/zarzadzanie/src/components/mainpages/createTank/CreateTank.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useHistory","useParams","initialState","tank_id","side_id","title","producer","modyfication","ammo","armor","milage","images","category","datetank","datetankc","CreateTank","state","tank","setTank","categories","categoriesAPI","setImages","loading","setLoading","isAdmin","userAPI","token","param","tanks","tanksAPI","onEdit","setOnEdit","callback","setCallback","id","forEach","_id","handleUpload","e","preventDefault","alert","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","data","err","response","msg","handleDestroy","public_id","handleChangeInput","name","value","handleSubmit","put","styleUpload","display","url","map"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport axios from 'axios'\nimport {GlobalState} from '../../../GlobalState'\nimport Loading from '../utils/loading/Loading'\nimport {useHistory, useParams} from 'react-router-dom'\n\nconst initialState = {\n    tank_id:'' ,\n    side_id:'' ,\n    title:'' ,\n    producer:'' ,\n    modyfication:'' ,\n    ammo:'' ,\n    armor:'' ,\n    milage:'' ,\n    images:'' ,\n    category:'' ,\n    datetank:'' ,\n    datetankc:'' \n}\n\nfunction CreateTank() {\n    const state = useContext(GlobalState)\n    const [tank, setTank] = useState(initialState)\n    const [categories] = state.categoriesAPI.categories\n    const [images, setImages] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n\n    const [isAdmin] = state.userAPI.isAdmin\n    const [token] = state.token\n\n    const param = useParams()\n\n    const [tanks] = state.tanksAPI.tank\n    const [onEdit, setOnEdit] = useState(false)\n    const [callback, setCallback] = state.tanksAPI.callback\n\n    useEffect(() => {\n        if(param.id){\n            setOnEdit(true)\n            tanks.forEach(tank => {\n                if(tank._id === param.id) {\n                    setTank(tank)\n                    setImages(tank.images)\n                }\n            })\n        }else{\n            setOnEdit(false)\n            setTank(initialState)\n            setImages(false)\n        }\n    }, [param.id, tanks])\n\n    const handleUpload = async e =>{\n        e.preventDefault()\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n            const file = e.target.files[0]\n            \n            if(!file) return alert(\"File not exist.\")\n\n            if(file.size > 1024 * 1024) // 1mb\n                return alert(\"Size too large!\")\n\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n                return alert(\"File format is incorrect.\")\n\n            let formData = new FormData()\n            formData.append('file', file)\n\n            setLoading(true)\n            const res = await axios.post('/api/upload', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n            setLoading(false)\n            setImages(res.data)\n\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    const handleDestroy = async () => {\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n            setLoading(true)\n            await axios.post('/api/destroy', {public_id: images.public_id}, {\n                headers: {Authorization: token}\n            })\n            setLoading(false)\n            setImages(false)\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    const handleChangeInput = e =>{\n        const {name, value} = e.target\n        setTank({...tank, [name]:value})\n    }\n\n    const handleSubmit = async e =>{\n        e.preventDefault()\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n            if(!images) return alert(\"No Image Upload\")\n\n            if(onEdit){\n                await axios.put(`/api/tanks/${tank._id}`, {...tank, images}, {\n                    headers: {Authorization: token}\n                })\n            }else{\n                await axios.post('/api/tanks', {...tank, images}, {\n                    headers: {Authorization: token}\n                })\n            }\n            setCallback(!callback)\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    const styleUpload = {\n        display: images ? \"block\" : \"none\"\n    }\n    return (\n        <div className=\"create_tank\">\n            <div className=\"upload\">\n                <input type=\"file\" name=\"file\" id=\"file_up\" onChange={handleUpload}/>\n                {\n                    loading ? <div id=\"file_img\"><Loading /></div>\n\n                    :<div id=\"file_img\" style={styleUpload}>\n                        <img src={images ? images.url : ''} alt=\"\"/>\n                        <span onClick={handleDestroy}>X</span>\n                    </div>\n                }\n                \n            </div>\n\n            <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                    <label htmlFor=\"tank_id\">Tank ID</label>\n                    <input type=\"text\" name=\"tank_id\" id=\"tank_id\" required\n                    value={tank.tank_id} onChange={handleChangeInput} disabled={onEdit} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"side_id\">Numer Boczny</label>\n                    <input type=\"text\" name=\"tank_id\" id=\"tank_id\" required\n                    value={tank.side_id} onChange={handleChangeInput} disabled={onEdit} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"producer\">Producent</label>\n                    <input type=\"text\" name=\"producer\" id=\"producer\" required\n                    value={tank.producer} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"modyfication\">Modyfikacja</label>\n                    <input type=\"text\" name=\"modyfication\" id=\"modyfication\" required\n                    value={tank.modyfication} onChange={handleChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"ammo\">Liczba Amunicja</label>\n                    <input type=\"number\" name=\"ammo\" id=\"ammo\" required\n                    value={tank.ammo} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"armor\">Grubości pancerza przód/boki/tył w mm</label>\n                    <input type=\"text\" name=\"armor\" id=\"armor\" required\n                    value={tank.armor} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"milage\">Przebieg w km</label>\n                    <input type=\"number\" name=\"milage\" id=\"milage\" required\n                    value={tank.milage} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"datetank\">Rocznik</label>\n                    <input type=\"date\" name=\"datetank\" id=\"datetank\" required\n                    value={tank.datetank} onChange={handleChangeInput} />\n                </div>\n                <div className=\"row\">\n                    <label htmlFor=\"datetankc\">Data Wprowadzenia Czołgu</label>\n                    <input type=\"date\" name=\"datetankc\" id=\"datetankc\" required\n                    value={tank.datetankc} onChange={handleChangeInput} />\n                </div>\n\n\n\n                <div className=\"row\">\n                    <label htmlFor=\"categories\">Kategoria: </label>\n                    <select name=\"category\" value={tank.category} onChange={handleChangeInput} >\n                        <option value=\"\">Proszę o wybranie kategorii</option>\n                        {\n                            categories.map(category => (\n                                <option value={category._id} key={category._id}>\n                                    {category.name}\n                                </option>\n                            ))\n                        }\n                    </select>\n                </div>\n\n                <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateTank\n"]},"metadata":{},"sourceType":"module"}